TBD: docs/top-right-bottom-left

* TBDs
** group modifiers
group and group-* (ex. group-hover) modifiers
** peer modifiers
peer and peer-* (peer-invalid) modifiers)

** Floating labels
https://www.youtube.com/watch?v=nJzKi6oIvBA

** Before and after
https://tailwindcss.com/docs/hover-focus-and-other-states#pseudo-elements

** list markers
#+BEGIN_SRC html
  <ul role="list" class="marker:text-sky-400 list-disc pl-5 space-y-3 text-slate-500">
  <li>5 cups chopped Porcini mushrooms</li>
  <li>1/2 cup of olive oil</li>
  <li>3lb of celery</li>
</ul>
#+END_SRC

** Prefers color scheme
https://tailwindcss.com/docs/hover-focus-and-other-states#prefers-color-scheme

** Prefers color scheme

** Viewport orientation

** print style
https://tailwindcss.com/docs/hover-focus-and-other-states#print-styles

** Open/closed state for <details> and <dialog>
#+BEGIN_SRC html
<div class="max-w-lg mx-auto p-8">
  <details class="open:bg-white dark:open:bg-slate-900 open:ring-1 open:ring-black/5 dark:open:ring-white/10 open:shadow-lg p-6 rounded-lg" open>
    <summary class="text-sm leading-6 text-slate-900 dark:text-white font-semibold select-none">
      Why do they call it Ovaltine?
    </summary>
    <div class="mt-3 text-sm leading-6 text-slate-600 dark:text-slate-400">
      <p>The mug is round. The jar is round. They should call it Roundtine.</p>
    </div>
  </details>
</div>
#+END_SRC

** toggle-dark-mode
https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually


** https://tailwindcss.com/docs/reusing-styles
using template partial
Extracting classes with @apply
#+BEGIN_SRC javascript
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
  .btn-primary {
    @apply py-2 px-4 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75;
  }
}
#+END_SRC

** Adding Custom Styles
tailwind.config.js
module.exports/theme/{screens| colors| }

** Directives and functions
https://tailwindcss.com/docs/functions-and-directives
*** Using @apply with per-component CSS
for svelte and vue

** Configurations
tailwind.config.js
Generating a PostCSS configuration file
#+BEGIN_SRC
npx tailwindcss init
npx tailwindcss init -p
npx tailwindcss -c ./tailwindcss-config.js -i input.css -o output.css
#+END_SRC
presets
prefix
core Plugins
** Content configuration
The content section of your tailwind.config.js file is where you configure the paths to
all of your HTML templates, JavaScript components, and
any other source files that contain Tailwind class names.

** manipulating in javascript
#+BEGIN_SRC
// ...
menuButton.addEventListener('click', function () {
  let classList = document.getElementById('nav').classList
  classList.toggle('hidden')
  classList.toggle('block')
})
// ...
#+END_SRC

** theme

** plugins

https://tailwindcss.com/docs/plugins
tailwind.config.js
#+BEGIN_SRC
  module.exports = {
  // ...
  plugins: [
    require('@tailwindcss/typography'),
    require('@tailwindcss/forms'),
    require('@tailwindcss/line-clamp'),
    require('@tailwindcss/aspect-ratio'),
  ]
}
#+END_SRC

forms
Line-clamp

Aspect ratio

** presets

** preflight
already included with base
